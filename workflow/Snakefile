# Main entrypoint of the workflow.
# Please follow the best practices:
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there.


configfile: "config/config.yaml"


pepfile: config["pepfile"]


include: "rules/common.smk"
include: "rules/contamination.smk"
include: "rules/qc.smk"
include: "rules/species_diversity.smk"
include: "rules/report.smk"


if config["sample-sheet"]["auto-creation"]:

    include: "rules/preprocessing.smk"


DATE = get_run_date()

if config["testing"]:

    rule all:
        input:
            expand(
                "results/{date}/report/bracken/merged.bracken_{level}.txt",
                date=DATE,
                level=get_tax_levels(),
            ),
            directory(expand("results/{date}/report/filtering_summary/", date=DATE)),
            expand("results/{date}/report/qc/multiqc.html", date=DATE),
            expand("results/{date}/report/plots/read_summary.html", date=DATE),
            expand("results/{date}/report/plots/read_summary.html", date=DATE),
            expand("results/{date}/report/plots/domain_abundance.html", date=DATE),

else:

    rule all:
        input:
            expand(
                "results/{date}/report/{date}_report.zip",
                date=DATE,
            ),
            expand(
                "results/{date}/report/bracken/merged.bracken_{level}.txt",
                date=DATE,
                level=get_tax_levels(),
            ),


onsuccess:
    print("Workflow finished without an error.")
    if os.path.exists("results/{date}/report/{date}_report.zip".format(date=DATE)):
        shell("cd results/{DATE}/ && tar cpfz {DATE}_results.tar.gz report/")
        print("You can find the results in {date}_results.tar.gz".format(date=DATE))



onerror:
    print("An error occurred")
